name: Build, test and publish for macOS

on:
  workflow_dispatch:
  push:
    branches:
      - 'dev'
      - 'main'
    paths-ignore:
      - 'windows/**'
      - 'linux/**'
      - 'snap/**'
      - .github/workflows/release_deploy_windows.yml
      - .github/workflows/release_deploy_linux.yml

# Auto cancel previous runs if they were not completed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# Write permissions are required to upload the release asset.
permissions: write-all

jobs:
  build:
    runs-on: macos-latest
    timeout-minutes: 120

    env:
      EDAMAME_APP_SENTRY: ${{ secrets.EDAMAME_APP_SENTRY }}
      PWNED_API_KEY: ${{ secrets.PWNED_API_KEY }}
      EDAMAME_TARGET: ${{ secrets.EDAMAME_TARGET }}
      EDAMAME_CA_PEM: ${{ secrets.EDAMAME_CA_PEM }}
      EDAMAME_CLIENT_PEM: ${{ secrets.EDAMAME_CLIENT_PEM }}
      EDAMAME_CLIENT_KEY: ${{ secrets.EDAMAME_CLIENT_KEY }}
      LAMBDA_SIGNATURE: ${{ secrets.LAMBDA_SIGNATURE }}
      # For Fastlane
      APPLE_APPSTORE_CONNECT_API_ISSUER_ID: ${{ secrets.APPLE_APPSTORE_CONNECT_API_ISSUER_ID }}
      APPLE_APPSTORE_CONNECT_API_KEY_ID: ${{ secrets.APPLE_APPSTORE_CONNECT_API_KEY_ID }}
      APPLE_APPSTORE_CONNECT_API_KEY: ${{ secrets.APPLE_APPSTORE_CONNECT_API_KEY }}
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.DEV_GITHUB_TOKEN_B64 }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

    steps:

      - name: Install additional packages w/ Homebrew
        run: |
          brew install protobuf
          brew install wget

      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Setup fastlane
        run: |
          brew install fastlane
          cd macos/fastlane && fastlane match appstore --readonly

      - name: Flutter Action
        uses: subosito/flutter-action@v2

      - name: Enable macOS for Flutter
        shell: bash
        run: flutter config --enable-macos-desktop

      - name: Install dependencies
        shell: bash
        run: |
          flutter pub cache clean
          flutter pub get --verbose

      - name: Install CocoaPods w/ Homebrew
        run: |
          brew install cocoapods
          cd macos; pod install

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Setup for edamame_foundation
        shell: bash
        run: |
          cd ..
          git clone --branch ${{ steps.extract_branch.outputs.branch }} https://github.com/edamametechnologies/edamame_foundation.git
          cd ./edamame_foundation
          cat ./Cargo.toml | sed 's/\"cdylib\"/\"staticlib\"/g' > ./Cargo.toml.static 
          cp ./Cargo.toml.static ./Cargo.toml
          ./update-threats.sh macOS

      - name: Configure Git Authentication to import private crates
        run: |
          git config --global user.email "dev@edamame.tech"
          git config --global user.name "EDAMAME Dev"
          git config --global url."https://edamamedev:${{ secrets.DEV_GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"

      - name: Setup for edamame_core
        shell: bash
        run: |
          cd ..
          git clone --branch ${{ steps.extract_branch.outputs.branch }} https://github.com/edamametechnologies/edamame_core.git
          cd ./edamame_core
          cat ./Cargo.toml | sed 's/\"cdylib\"/\"staticlib\"/g' > ./Cargo.toml.static 
          cp ./Cargo.toml.static ./Cargo.toml

      - name: Build application
        # Main or dev
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev'
        shell: bash
        run: |
          make macos